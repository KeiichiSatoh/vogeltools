% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/list2mat.R
\name{list2mat}
\alias{list2mat}
\title{Convert List of matrices to a matrix.}
\usage{
list2mat(mats = mats, fill = NA)
}
\arguments{
\item{mats}{the matrices stored in a \code{list} format. \code{array} is also
possible to supply as input, if the first dimension of the array indicats the
each network, and the second and third are the row and column of the matrix
(this is the default format of package \code{sna}).}

\item{fill}{the value of the off-diagonal cells. The defalut value is
\code{NA}.}
}
\value{
a matrix converted from the list of matrices.
}
\description{
\code{list2mat} converts a list of matrices to a matrix in which each orginal
matrix locates in the diagonal and off-diagonal cells are set to be NA (by
default).
}
\details{
This function convertes a original list of matrices to a new matrix in which
each orginal matrix locates in the diagonal and of diagonal cells are set to
be NA (the filler can be set by changing \code{fill}. This conversion is
useful, for example, when running an QAP regression with the intention to
find out the coefficients across networks.
}
\examples{
## library(sna)
mat1 <- rgraph(3)
dimnames(mat1) <- list(paste(rep("A", 3), 1:3, sep = ""),
                      paste(rep("A", 3), 1:3, sep = ""))
mat2 <- rgraph(4)
dimnames(mat2) <- list(paste(rep("B", 4), 1:4, sep = ""),
                      paste(rep("B", 4), 1:4, sep = ""))
mat3 <- rgraph(2)
dimnames(mat3) <- list(paste(rep("C", 2), 1:2, sep = ""),
                      paste(rep("C", 2), 1:2, sep = ""))
mats <- list(mat1, mat2, mat3)

list2mat(mats, fill = NA)

}
